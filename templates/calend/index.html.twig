{% extends 'base.html.twig' %}

{% block title %}Calendrier{% endblock %}

{% block stylesheets %}
    <style>
        #calendrier{
            width: 80%;
            margin: auto;
        }
    </style>
    <link rel="shortcut icon" type="image/x-icon" href="{{ asset('front/images/favicon.png') }}" />

    <!-- CSS PLUGINS CSS STYLE -->
    <link rel="stylesheet" href="{{ asset('front/plugins/bootstrap/bootstrap.min.css') }}">
    <link rel="stylesheet" href="{{ asset('front/plugins/themify-icons/themify-icons.css') }}">
    <link rel="stylesheet" href="{{ asset('front/plugins/slick/slick.css') }}">
    <link rel="stylesheet" href="{{ asset('front/plugins/slick/slick-theme.css') }}">
    <link rel="stylesheet" href="{{ asset('front/plugins/fancybox/jquery.fancybox.min.css') }}">
    <link rel="stylesheet" href="{{ asset('front/plugins/aos/aos.css') }}">

    <!-- CUSTOM CSS -->
    <link href="{{ asset('front/css/style.css') }}" rel="stylesheet">
{% endblock %}

{% block body %}

    <div id="calendrier">
    </div>
{% endblock %}

{% block javascripts %}
<script>
    window.onload = () => {
        let calendarElt = document.querySelector("#calendrier")

        let calendar = new FullCalendar.Calendar(calendarElt, {
            initialView: 'timeGridWeek',
            locale: 'fr',
            timeZone: 'Europe/Paris',
            headerToolbar: {
                start: 'prev,next today',
                center: 'title',
                end: 'dayGridMonth,timeGridWeek'
            },
            events: {{ data|raw }},
            editable: true,
            eventResizableFromStart: true
        })

        calendar.on('eventChange', (e) => {
            let url = `/api/${e.event.id}/edit`
            let donnees = {
                "title": e.event.title,
                "description": e.event.extendedProps.description,
                "start": e.event.start,
                "end": e.event.end,
                "backgroundColor": e.event.backgroundColor,
                "borderColor": e.event.borderColor,
                "textColor": e.event.textColor,
                "allDay": e.event.allDay
            }
            
            let xhr = new XMLHttpRequest

            xhr.open("PUT", url)
            xhr.send(JSON.stringify(donnees))
        })

        calendar.render()
    }
</script>

{% endblock %}